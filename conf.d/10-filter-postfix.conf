filter {
  # Clasify if postfix, amavis or sasl daemon
  # TODO: opendkim
  if [type] == "postfix" {
    grok {
    	patterns_dir => ["/etc/logstash/patterns/"]
    	match => ["message", "%{POSTFIX}"]
    	add_tag => ["postfix", "unknown", "%{[component]}"]
    }
    if "_grokparsefailure" in [tags] {
      grok {
          patterns_dir => ["/etc/logstash/patterns/"]
          match => [ "message", "%{AMAVIS}" ]
          add_tag => [ "amavis" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{SASLAUTHD}" ]
        add_tag => [ "saslauthd" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{OPENDKIM}" ]
        add_tag => [ "result", "opendkim" ]
        remove_tag => [ "unknown" ]
      }
    }
  }

  if [component] == "qmgr" {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXQMGR}" ]
      remove_tag => [ "unknown" ]
    }
    if ![queuestatus] { mutate { add_field => { "queuestatus" => "removed" } } }
    else {
      mutate {
        add_field => {
          "rcpt_qty" => "%{nrcpt}"
          "bytes" => "%{size}"
        }
      }
    }
  }

  if [component] == "cleanup" {
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXCLEANUP}" ]
        remove_tag => [ "unknown" ]
    }
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{ZBOX_SUBJECT}" ]
        add_tag => [ "antispam", "zbox_subject" ]
        remove_tag => [ "unknown" ]
    }
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{ZBOX_ATTACHMENT}" ]
        add_tag => [ "antispam", "zbox_attachment" ]
        remove_tag => [ "unknown" ]
    }
    if "antispam" in [tags] {
      ruby {
        init => "require 'base64'"
        code => "
          event['subjectHash'] = Base64.strict_encode64(event['subject']) if event['subject'];
          event['attachmentHash'] = Base64.strict_encode64(event['attachment']) if event['attachment'];
        "
      }
    }
  }

  if [component] == "bounce" {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXBOUNCE}" ]
      remove_tag => [ "unknown" ]
    }
  }

  if [component] == "smtpd" or [component] == "submission/smtpd" or [component] == "smtps/smtpd" or [component] == "amavisd/smtpd" or [component] == "postfix/dkimmilter/smtpd" {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDTLSCONNECT}" ]
      add_tag => [ "tls", "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDCONNECT}" ]
      add_tag => [ "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDDISCONNECT}" ]
      add_tag => [ "disconnect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDACTIONS}" ]
      add_tag => [ "action" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDTIMEOUTS}" ]
      add_tag => [ "timeout" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDSETQIDWITHSASL}" ]
      add_tag => [ "sasl", "login", "set_queue_id" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDSETQID}" ]
      add_tag => [ "set_queue_id" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPDLOGINFAILED}" ]
      add_tag => [ "sasl", "login", "failed" ]
      remove_tag => [ "unknown" ]
    }
  }

  if [component] == "smtp" or [component] == "lmtp" or [component] == "local" or [component] == "error" {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "\(250 2.0.0 from MTA\(smtp:\[127.0.0.1\]:10030\): 250 2.0.0 Ok: queued as %{QUEUEID:queued_as}\)" ]
      add_tag => [ "to_dkim" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "\(250 2.0.0 from MTA\(smtp:\[127.0.0.1\]:10025\): 250 2.0.0 Ok: queued as %{QUEUEID:queued_as}\)" ]
      add_tag => [ "to_amavis" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPRELAYGENERAL}" ]
      add_tag => [ "relay" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPCONNECT}" ]
      add_tag => [ "connect" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTP4XX}" ]
      add_tag => [ "4xx" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTP5XX}" ]
      add_tag => [ "5xx" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPREFUSAL}" ]
      add_tag => [ "refusal" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPLOSTCONNECTION}" ]
      add_tag => [ "lost_connection" ]
      remove_tag => [ "unknown" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXSMTPTIMEOUT}" ]
      add_tag => [ "lost_connection" ]
      remove_tag => [ "unknown" ]
    }
  }
  if [component] == "postsuper" {
    grok {
      patterns_dir => ["/etc/logstash/patterns/"]
      match => [ "message", "%{POSTFIXPOSTSUPER}" ]
      add_tag => [ "relay" ]
      remove_tag => [ "unknown" ]
    }
  }
}
